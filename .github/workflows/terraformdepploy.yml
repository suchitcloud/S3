name: "Terraform Deployment"
on:
  # Manual trigger
  workflow_dispatch:
  push:
    paths:
      - '*/**'
  pull_request:
    branches: [ main ]
    
env: 
AWS_DEFAULT_REGION: us-east-1
AWS_ROLE_ARN:  arn:aws:iam::824584691035:role/github-action-role

permissions:
  contents:      read
  id-token:      write
  issues:        write
  pull-requests: write
  
defaults:
  run:
    shell: bash
jobs:
  terraform:
    name:   terraform
    runs-on: ubuntu-latest
   
   # env:
   #      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
   #      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
   #      AWS_DEFAULT_REGION: us-east-1
    steps:
      -  name: checkout
         uses: actions/checkout@v2
      
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        
      - name: Terraform Init
        id: init
        run: terraform init 

      - name: Terraform Plan
        id: plan
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform plan -no-color

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        id: apply
        run: terraform apply -auto-approve -input=false -lock=false

      - name: Terraform destroy
        if: github.ref == 'refs/heads/destroy'
        id: destroy
        run: terraform destroy -auto-approve -input=false

  comment:
    runs-on: ubuntu-latest
    needs: terraform
    if: github.event_name == 'pull_request'
    steps:
      - uses: actions/github-script@v5
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'ðŸ‘‹ Thanks for reportingg!'
            })
